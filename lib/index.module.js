!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("@mapbox/geo-viewport"),require("react"),require("react-native-maps")):"function"==typeof define&&define.amd?define(["@mapbox/geo-viewport","react","react-native-maps"],e):"object"==typeof exports?exports["react-native-map-cluster"]=e(require("@mapbox/geo-viewport"),require("react"),require("react-native-maps")):t["react-native-map-cluster"]=e(t["@mapbox/geo-viewport"],t.react,t["react-native-maps"])}(this,((t,e,r)=>(()=>{"use strict";var n={65:function(t,e,r){var n,i=this&&this.__extends||(n=function(t,e){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])},n(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function r(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}),o=this&&this.__assign||function(){return o=Object.assign||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var i in e=arguments[r])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t},o.apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0}),e.withAnimatedCluster=void 0;var a=r(155),u=r(122),s=r(723);function d(t,e,r,n){void 0===n&&(n=1.3);var i=t.userExtension.markers.map((function(t){return t.coordinate.latitude})),o=t.userExtension.markers.map((function(t){return t.coordinate.longitude})),a=Math.max.apply(null,i.map((function(t){return Math.abs(t)}))),s=Math.max.apply(null,o.map((function(t){return Math.abs(t)}))),d=Math.min.apply(null,i.map((function(t){return Math.abs(t)}))),p=Math.min.apply(null,o.map((function(t){return Math.abs(t)}))),c=[o.find((function(t){return Math.abs(t)===p})),i.find((function(t){return Math.abs(t)===d})),o.find((function(t){return Math.abs(t)===s})),i.find((function(t){return Math.abs(t)===a}))],l=u.viewport(c,[e,r]);return{latitude:l.center[1],longitude:l.center[0],longitudeDelta:(s-p)*n||.1,latitudeDelta:(a-d)*n||.1}}e.withAnimatedCluster=function(t){return function(e){return function(r){function n(e){var n=r.call(this,e)||this;return n.state={animatedMarkers:[],clusters:[],region:e.initialRegion},n.superCluster=t.superClusterProvider(),n.onRegionChanged=n.onRegionChanged.bind(n),n}return i(n,r),n.prototype.componentDidMount=function(){this.initialize()},n.prototype.componentDidUpdate=function(t){var e=t.markers.length;this.props.markers.length===e?t.markers.map((function(t){return t.id})).join("_")!==this.props.markers.map((function(t){return t.id})).join("_")&&this.initialize():this.initialize()},n.prototype.render=function(){return a.createElement(e,o({},this.props,{region:this.state.region,clusters:this.state.clusters,onRegionChanged:this.onRegionChanged,animatedMarkers:this.state.animatedMarkers}))},n.prototype.initialize=function(){var t=this,e=this.props.markers.map((function(t){return o(o({},t),{coordinate:new s.AnimatedRegion({latitude:t.coordinate.latitude,longitude:t.coordinate.longitude,latitudeDelta:void 0===t.coordinate.latitudeDelta?0:t.coordinate.latitudeDelta,longitudeDelta:void 0===t.coordinate.longitudeDelta?0:t.coordinate.longitudeDelta}),id:t.id,getCluster:function(e){return e.find((function(e){return(e.userExtension.markers||[]).find((function(e){return e.id===t.id}))}))}})}));this.setState({animatedMarkers:e},(function(){var e=t.props.markers.map((function(t){return{type:"Feature",geometry:{type:"Point",coordinates:[t.coordinate.longitude,t.coordinate.latitude]},properties:{point_count:0,item:t}}}));t.superCluster.load(e),t.onRegionChanged(t.state.region)}))},n.prototype.onRegionChanged=function(e){var r=this,n=e.longitudeDelta<0?e.latitudeDelta+360:e.longitudeDelta,i=[e.longitude-n,e.latitude-e.latitudeDelta,e.longitude+n,e.latitude+e.latitudeDelta],a=e.longitudeDelta>=40?{zoom:1}:u.viewport(i,[t.width,t.height]),s=this.superCluster.getClusters(i,a.zoom),p=this.props.markers;s.forEach((function(e){if(0===e.properties.point_count){var n=p.find((function(t){return t.id===e.properties.item.id}));e.userExtension={coordinate:e.properties.item.coordinate,markers:n?[n]:[],getCenterPosition:function(){return d(e,t.width,t.height,t.deltaOffset)}}}else{var i=[];r.superCluster.getChildren(e.properties.cluster_id).forEach((function(t){r.addMarkersToTopCluster(p,t,i)})),e.userExtension={coordinate:{latitude:e.geometry.coordinates[1],longitude:e.geometry.coordinates[0]},markers:i,getCenterPosition:function(){return d(e,t.width,t.height,t.deltaOffset)}}}})),function(t,e,r,n,i){(function(t,e){if(t.length!==e.length)return!1;for(var r=0;r<t.length;r++){var n=t[r].userExtension.coordinate,i=e[r].userExtension.coordinate;if(n.latitude!==i.latitude)return!1;if(n.longitude!==i.longitude)return!1}return!0})(n,i)||e.forEach((function(e,n){var a=i.find((function(t){return t.userExtension.markers.find((function(t){return t.id===e.id}))})),u=a?a.userExtension.coordinate:e.coordinate;r[n].coordinate.timing(o(o({},u),{duration:t})).start()}))}(t.moveSpeed,p,this.state.animatedMarkers,this.state.clusters,s),this.setState({region:e,clusters:s})},n.prototype.addMarkersToTopCluster=function(t,e,r){var n=this;if(0===e.properties.point_count){var i=e.properties.item.id,o=t.find((function(t){return t.id===i}));o&&r.push(o)}else this.superCluster.getChildren(e.properties.cluster_id).forEach((function(e){n.addMarkersToTopCluster(t,e,r)}))},n}(a.Component)}}},122:e=>{e.exports=t},155:t=>{t.exports=e},723:t=>{t.exports=r}},i={};return function t(e){var r=i[e];if(void 0!==r)return r.exports;var o=i[e]={exports:{}};return n[e].call(o.exports,o,o.exports,t),o.exports}(65)})()));