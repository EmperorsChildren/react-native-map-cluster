!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("react"),require("@mapbox/geo-viewport"),require("react-native-maps")):"function"==typeof define&&define.amd?define(["react","@mapbox/geo-viewport","react-native-maps"],e):"object"==typeof exports?exports["react-native-map-cluster"]=e(require("react"),require("@mapbox/geo-viewport"),require("react-native-maps")):t["react-native-map-cluster"]=e(t.react,t["@mapbox/geo-viewport"],t["react-native-maps"])}(this,(function(t,e,n){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";var r,i=this&&this.__extends||(r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),o=this&&this.__assign||function(){return(o=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0});var a=n(1),u=n(2),s=n(3);function c(t,e,n,r){void 0===r&&(r=1.3);var i=t.userExtension.markers.map((function(t){return t.coordinate.latitude})),o=t.userExtension.markers.map((function(t){return t.coordinate.longitude})),a=Math.max.apply(null,i.map((function(t){return Math.abs(t)}))),s=Math.max.apply(null,o.map((function(t){return Math.abs(t)}))),c=Math.min.apply(null,i.map((function(t){return Math.abs(t)}))),d=Math.min.apply(null,o.map((function(t){return Math.abs(t)}))),p=[o.find((function(t){return Math.abs(t)===d})),i.find((function(t){return Math.abs(t)===c})),o.find((function(t){return Math.abs(t)===s})),i.find((function(t){return Math.abs(t)===a}))],l=u.viewport(p,[e,n]);return{latitude:l.center[1],longitude:l.center[0],longitudeDelta:(s-d)*r||.1,latitudeDelta:(a-c)*r||.1}}e.withAnimatedCluster=function(t){return function(e){return function(n){function r(e){var r=n.call(this,e)||this;return r.state={animatedMarkers:[],clusters:[],region:e.initialRegion},r.superCluster=t.superClusterProvider(),r.onRegionChanged=r.onRegionChanged.bind(r),r}return i(r,n),r.prototype.componentDidMount=function(){this.initialize()},r.prototype.componentDidUpdate=function(t){var e=t.markers.length;this.props.markers.length===e?t.markers.map((function(t){return t.id})).join("_")!==this.props.markers.map((function(t){return t.id})).join("_")&&this.initialize():this.initialize()},r.prototype.render=function(){return a.createElement(e,o({},this.props,{region:this.state.region,clusters:this.state.clusters,onRegionChanged:this.onRegionChanged,animatedMarkers:this.state.animatedMarkers}))},r.prototype.initialize=function(){var t=this,e=this.props.markers.map((function(t){return o(o({},t),{coordinate:new s.AnimatedRegion({latitude:t.coordinate.latitude,longitude:t.coordinate.longitude,latitudeDelta:void 0===t.coordinate.latitudeDelta?0:t.coordinate.latitudeDelta,longitudeDelta:void 0===t.coordinate.longitudeDelta?0:t.coordinate.longitudeDelta}),id:t.id,getCluster:function(e){return e.find((function(e){return(e.userExtension.markers||[]).find((function(e){return e.id===t.id}))}))}})}));this.setState({animatedMarkers:e},(function(){var e=t.props.markers.map((function(t){return{type:"Feature",geometry:{type:"Point",coordinates:[t.coordinate.longitude,t.coordinate.latitude]},properties:{point_count:0,item:t}}}));t.superCluster.load(e),t.onRegionChanged(t.state.region)}))},r.prototype.onRegionChanged=function(e){var n=this,r=e.longitudeDelta<0?e.latitudeDelta+360:e.longitudeDelta,i=[e.longitude-r,e.latitude-e.latitudeDelta,e.longitude+r,e.latitude+e.latitudeDelta],a=e.longitudeDelta>=40?{zoom:1}:u.viewport(i,[t.width,t.height]),s=this.superCluster.getClusters(i,a.zoom),d=this.props.markers;s.forEach((function(e){if(0===e.properties.point_count){var r=d.find((function(t){return t.id===e.properties.item.id}));e.userExtension={coordinate:e.properties.item.coordinate,markers:r?[r]:[],getCenterPosition:function(){return c(e,t.width,t.height,t.deltaOffset)}}}else{var i=[];n.superCluster.getChildren(e.properties.cluster_id).forEach((function(t){n.addMarkersToTopCluster(d,t,i)})),e.userExtension={coordinate:{latitude:e.geometry.coordinates[1],longitude:e.geometry.coordinates[0]},markers:i,getCenterPosition:function(){return c(e,t.width,t.height,t.deltaOffset)}}}})),function(t,e,n,r,i){(function(t,e){if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++){var r=t[n].userExtension.coordinate,i=e[n].userExtension.coordinate;if(r.latitude!==i.latitude)return!1;if(r.longitude!==i.longitude)return!1}return!0})(r,i)||e.forEach((function(e,r){var a=i.find((function(t){return t.userExtension.markers.find((function(t){return t.id===e.id}))})),u=a?a.userExtension.coordinate:e.coordinate;n[r].coordinate.timing(o(o({},u),{duration:t})).start()}))}(t.moveSpeed,d,this.state.animatedMarkers,this.state.clusters,s),this.setState({region:e,clusters:s})},r.prototype.addMarkersToTopCluster=function(t,e,n){var r=this;if(0===e.properties.point_count){var i=e.properties.item.id,o=t.find((function(t){return t.id===i}));o&&n.push(o)}else this.superCluster.getChildren(e.properties.cluster_id).forEach((function(e){r.addMarkersToTopCluster(t,e,n)}))},r}(a.Component)}}},function(e,n){e.exports=t},function(t,n){t.exports=e},function(t,e){t.exports=n}])}));